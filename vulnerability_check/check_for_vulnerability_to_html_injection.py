import html
from typing import List, Tuple
from bs4 import BeautifulSoup


PAYLOADS = {
    "<h1>test</h1>",
    "<img src='x' onerror='alert(1)'>",
    "<body onload='alert(1)'>",
    "<iframe src='javascript:alert(1)'>",
    "<svg onload='alert(1)'>",
    "<div style='width:100px;height:100px;background:url(javascript:alert(1))'>",
    "&lt;h1&gt;Test&lt;/h1&gt;",
}


def test_html_injection_in_form(self, form: str, url: str) -> List[Tuple[bool, str]]:
    """
    Test for HTML Injection vulnerabilities in a web form.

    This function submits various payloads that could potentially inject HTML into the web page
    if the input is not properly sanitized. After each submission, it checks the response for the payload.
    If the payload is found in the response, the corresponding payload is added to the results.

    Args:
        form (str): The web form to test.
        url (str): The URL to submit the form to.

    Returns:
        List[Tuple[bool, str]]: A list of tuples. Each tuple contains a boolean indicating whether the payload was found in the response,
                                 and the payload that was used.
    """
    results = []
    for payload in PAYLOADS:
        response = self.submit_form(form=form, value=payload, url=url)
        soup = BeautifulSoup(response.text, 'html.parser')

        if soup.body and (payload in soup.body.decode() or html.escape(payload) in soup.body.decode()):
            results.append((True, payload))
        else:
            results.append((False, payload))
    return [result for result in results if result[0]]

